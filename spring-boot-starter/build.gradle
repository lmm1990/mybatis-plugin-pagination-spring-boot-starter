plugins {
    id 'java'
    id 'maven-publish'
    id 'signing'
}

group = 'io.github.lmm1990'
version = '1.1'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-autoconfigure
    implementation group: 'org.springframework.boot', name: 'spring-boot-autoconfigure', version: '2.5.4'
    implementation 'org.projectlombok:lombok:1.18.20'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    // https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter
    implementation group: 'org.mybatis.spring.boot', name: 'mybatis-spring-boot-starter', version: '2.2.0'
    annotationProcessor 'org.projectlombok:lombok:1.18.10'
}

test {
    useJUnitPlatform()
}
compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileJava]*.options*.encoding = 'UTF-8'
}
compileTestJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    [compileTestJava]*.options*.encoding = 'UTF-8'
}

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from sourceSets.main.allJava
}
// 生成 javadoc jar
task javadocJar(type: Jar) {
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
}
// javadoc 配置，这里是自定义了 java doc 的一些配置
javadoc {
    description = "Generates project-level javadoc for use in -javadoc jar"

    options.memberLevel = org.gradle.external.javadoc.JavadocMemberLevel.PROTECTED
    options.author = true
    options.version = true
    options.header = project.name
    options.addStringOption('Xdoclint:none', '-quiet')

    // suppress warnings due to cross-module @see and @link references;
    // note that global 'api' task does display all warnings.
    logging.captureStandardError LogLevel.INFO
    logging.captureStandardOutput LogLevel.INFO // suppress "## warnings" message
    options.encoding = "UTF-8"
    options.charSet = 'UTF-8'
}
artifacts {
    archives javadocJar, sourcesJar
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version project.version
            from components.java
            artifact sourcesJar
            artifact javadocJar

            // https://docs.gradle.org/current/dsl/org.gradle.api.publish.maven.MavenPublication.html
            pom {
                name = "mybatis-plugin-pagination-spring-boot-starter"
                description = "mybatis pagination plugin"
                url = "https://github.com/lmm1990/mybatis-plugin-pagination-spring-boot-starter"
                licenses {
                    license {
                        name = "The Apache License, Version 2.0"
                        url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
                    }
                }
                developers {
                    developer {
                        id = "liumingming"
                        name = "liumingming"
                        email = "544484078@qq.com"
                    }
                }
                scm {
                    connection = "scm:git:https://github.com/lmm1990/mybatis-plugin-pagination-spring-boot-starter.git"
                    developerConnection = "scm:git:git@github.com:lmm1990/mybatis-plugin-pagination-spring-boot-starter.git"
                    url = "https://github.com/lmm1990/mybatis-plugin-pagination-spring-boot-starter"
                }
            }
        }
    }
    repositories {
        maven {
            name 'sonatypeRepository'
            url "https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/"
            credentials {
                username = "${NEXUS_USERNAME}"
                password = "${NEXUS_PASSWORD}"
            }
        }
        maven {
            name = 'sonatypeSnapshotRepository'
            url = "https://s01.oss.sonatype.org/content/repositories/snapshots/"
            credentials {
                username = "${NEXUS_USERNAME}"
                password = "${NEXUS_PASSWORD}"
            }
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}